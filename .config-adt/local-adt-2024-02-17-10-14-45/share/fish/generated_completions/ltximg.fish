# ltximg
# Autogenerated from man page /usr/share/man/man1/ltximg.1.gz
complete -c ltximg -s h -l help -d 'Display command line help and exit'
complete -c ltximg -s v -l version -d 'Display current version and exit'
complete -c ltximg -s V -l verbose -d 'Verbose printing information'
complete -c ltximg -s l -l log -d 'Write \\f(CW\\*(C`. log\\*(C\' file with debug information'
complete -c ltximg -s t -l tif -d 'Create \\f(CW\\*(C`. tif\\*(C\' files using ghostscript'
complete -c ltximg -s b -l bmp -d 'Create \\f(CW\\*(C`. bmp\\*(C\' files using ghostscript'
complete -c ltximg -s j -l jpg -d 'Create \\f(CW\\*(C`. jpg\\*(C\' files using ghostscript'
complete -c ltximg -s p -l png -d 'Create \\f(CW\\*(C`. png\\*(C\' files using ghostscript'
complete -c ltximg -s e -l eps -d 'Create \\f(CW\\*(C`. eps\\*(C\' files using pdftops'
complete -c ltximg -s s -l svg -d 'Create \\f(CW\\*(C`. svg\\*(C\' files using pdftocairo'
complete -c ltximg -s P -l ppm -d 'Create \\f(CW\\*(C`. ppm\\*(C\' files using pdftoppm'
complete -c ltximg -s g -l gray -d 'Gray scale for images using ghostscript'
complete -c ltximg -s f -l force -d 'Capture \\f(CW\\*(C`psset\\*(C\' and \\f(CW\\*(C`tikzset\\*(C\' to extract'
complete -c ltximg -s n -l noprew -d 'Create images files without preview package'
complete -c ltximg -s r -l runs -d 'Set the number of times the compiler will run on the input file for environme…'
complete -c ltximg -s d -l dpi -d 'Dots per inch resolution for images (default: 150)'
complete -c ltximg -s m -l margins -d 'Set margins in bp for pdfcrop (default: 0)'
complete -c ltximg -s o -l output -d 'Create output file'
complete -c ltximg -l imgdir -d 'Set name of directory to save images and files (default: images)'
complete -c ltximg -l prefix -d 'Set prefix append to each generated files (default: fig)'
complete -c ltximg -l myverb -d 'Add \\f(CW\\*(C`macroname\\*(C\' to verbatim inline search (default: myverb)'
complete -c ltximg -l clean -d 'Removes specific block text in output file (default: doc)'
complete -c ltximg -l zip -d 'Compress files generated in \\f(CW\\*(C`. zip\\*(C\' format'
complete -c ltximg -l tar -d 'Compress files generated in \\f(CW\\*(C`. tar. gz\\*(C\' format'
complete -c ltximg -l srcenv -d 'Create files with only code of environments'
complete -c ltximg -l subenv -d 'Create standalone files for environments'
complete -c ltximg -l shell -d 'Enable \\f(CW\\*(C`write18{SHELL COMMAND}\\*(C\''
complete -c ltximg -l latex -d 'Using \\f(CW\\*(C`latex>dvips>ps2pdf\\*(C\' for compiler input and \\f(CW\\*(C`pdfl…'
complete -c ltximg -l dvips -d 'Using \\f(CW\\*(C`latex>dvips>ps2pdf\\*(C\' for compiler input and \\f(CW\\*(C`late…'
complete -c ltximg -l dvilua -d 'Using \\f(CW\\*(C`dvilualatex>dvips>ps2pdf\\*(C\' for compiler input and \\f(CW\\*(…'
complete -c ltximg -l dvipdf -d 'Using \\f(CW\\*(C`latex>dvipdfmx\\*(C\' for compiler input and \\f(CW\\*(C`latex>dv…'
complete -c ltximg -l xetex -d 'Using \\f(CW\\*(C`xelatex\\*(C\' for compiler input and output'
complete -c ltximg -l luatex -d 'Using \\f(CW\\*(C`lualatex\\*(C\' for compiler input and output'
complete -c ltximg -l arara -d 'Use \\f(CW\\*(C`arara\\*(C\' for compiler input and output'
complete -c ltximg -l latexmk -d 'Using \\f(CW\\*(C`latexmk\\*(C\' for compiler output file'
complete -c ltximg -l norun -d 'Run script, but no create images files'
complete -c ltximg -l nopdf -d 'Don\'t create a \\f(CW\\*(C`. pdf\\*(C\' image files'
complete -c ltximg -l nocrop -d 'Don\'t run pdfcrop'
complete -c ltximg -l extrenv -d 'Add new environments to extract'
complete -c ltximg -l skipenv -d 'Skip some default environments to extract'
complete -c ltximg -l verbenv -d 'Add new verbatim environments'
complete -c ltximg -l writenv -d 'Add new verbatim write environments'

