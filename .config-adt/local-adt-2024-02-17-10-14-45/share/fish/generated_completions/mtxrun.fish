# mtxrun
# Autogenerated from man page /usr/share/man/man1/mtxrun.1.gz
complete -c mtxrun -l script -d 'run an mtx script (lua prefered method) (--noquotes), no script gives list'
complete -c mtxrun -l evaluate -d 'run code passed on the commandline (between quotes) (=loop) (exit|quit aborts)'
complete -c mtxrun -l execute -d 'run a script or program (texmfstart method) (--noquotes)'
complete -c mtxrun -l resolve -d 'resolve prefixed arguments'
complete -c mtxrun -l ctxlua -d 'run internally (using preloaded libs)'
complete -c mtxrun -l internal -d 'run script using built in libraries (same as --ctxlua)'
complete -c mtxrun -l locate -d 'locate given filename in database (default) or system (--first --all --detail)'
complete -c mtxrun -l tree -d 'use given texmf tree (default file: setuptex. tmf)'
complete -c mtxrun -l path -d 'go to given path before execution'
complete -c mtxrun -l ifchanged -d 'only execute when given file has changed (md checksum)'
complete -c mtxrun -l iftouched -d 'only execute when given file has changed (time stamp)'
complete -c mtxrun -l makestubs -d 'create stubs for (context related) scripts'
complete -c mtxrun -l removestubs -d 'remove stubs (context related) scripts'
complete -c mtxrun -l stubpath -d 'paths where stubs wil be written'
complete -c mtxrun -l windows -d 'create windows (mswin) stubs'
complete -c mtxrun -l unix -d 'create unix (linux) stubs'
complete -c mtxrun -l addbinarypath -d 'prepend the (found) binarypath to runners'
complete -c mtxrun -l verbose -d 'give a bit more info'
complete -c mtxrun -l trackers -d 'enable given trackers'
complete -c mtxrun -l progname -d 'format or backend'
complete -c mtxrun -l systeminfo -d 'show current operating system, processor, etc'
complete -c mtxrun -l edit -d 'launch editor with found file'
complete -c mtxrun -l launch -d 'launch files like manuals, assumes os support (--all,--list)'
complete -c mtxrun -l timedrun -d 'run a script and time its run'
complete -c mtxrun -l autogenerate -d 'regenerate databases if needed (handy when used to run context in an editor)'
complete -c mtxrun -l usekpse -d 'use kpse as fallback (when no mkiv and cache installed, often slower)'
complete -c mtxrun -l forcekpse -d 'force using kpse (handy when no mkiv and cache installed but less functionali…'
complete -c mtxrun -l prefixes -d 'show supported prefixes'
complete -c mtxrun -l generate -d 'generate file database'
complete -c mtxrun -l variables -d 'show configuration variables'
complete -c mtxrun -l configurations -d 'show configuration order'
complete -c mtxrun -l directives -d 'show (known) directives'
complete -c mtxrun -l experiments -d 'show (known) experiments'
complete -c mtxrun -l expand-braces -d 'expand complex variable'
complete -c mtxrun -l resolve-path -d 'expand variable (completely resolve paths)'
complete -c mtxrun -l expand-path -d 'expand variable (resolve paths)'
complete -c mtxrun -l expand-var -d 'expand variable (resolve references)'
complete -c mtxrun -l show-path -d 'show path expansion of '
complete -c mtxrun -l var-value -d 'report value of variable'
complete -c mtxrun -l find-file -d 'report file location'
complete -c mtxrun -l find-path -d 'report path of file'
complete -c mtxrun -l pattern -d 'filter variables AUTHOR More information about ConTeXt and the tools that com…'

